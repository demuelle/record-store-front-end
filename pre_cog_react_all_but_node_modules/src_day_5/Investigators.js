import { useEffect, useState } from 'react';
import service from './service';

const INVESTIGATOR = {
  id: 0,
  firstName: '',
  lastName: '',
};

function Investigators() {
  const [investigators, setInvestigators] = useState([]);
  const [editInvestigator, setEditInvestigator] = useState(INVESTIGATOR);
  const [addInvestigator, setAddInvestigator] = useState(INVESTIGATOR);
  const [error, setError] = useState();

  useEffect(() => {
    service
      .findAllInvestigators()
      .then(result => setInvestigators(result))
      .catch(err => setError(err.toString()));
  }, []);

  function makeChangeHandler(state, setState) {
    return function (evt) {
      const clone = { ...state };
      clone[evt.target.name] = evt.target.value;
      setState(clone);
    };
  }

  const handleAddChange = makeChangeHandler(
    addInvestigator,
    setAddInvestigator
  );
  const handleEditChange = makeChangeHandler(
    editInvestigator,
    setEditInvestigator
  );

  function add() {
    service
      .addInvestigator(addInvestigator)
      .then(inv => {
        setInvestigators([...investigators, inv]);
        setAddInvestigator(INVESTIGATOR);
      })
      .catch(err => setError(err.toString()));
  }

  function update() {
    service
      .updateInvestigator(editInvestigator)
      .then(() => {
        setInvestigators(
          investigators.map(i => {
            if (i.id === editInvestigator.id) {
              return editInvestigator;
            }
            return i;
          })
        );
        setEditInvestigator(INVESTIGATOR);
      })
      .catch(err => setError(err.toString()));
  }

  function remove(id) {
    service
      .deleteInvestigatorById(id)
      .then(() => setInvestigators(investigators.filter(i => i.id !== id)))
      .catch(err => setError(err.toString()));
  }

  return (
    <>
      <div className="mt-2">
        <h2>Investigators</h2>
      </div>
      {error && <div className="alert alert-danger">{error}</div>}
      {investigators.length === 0 && (
        <div className="alert alert-warning">No Investigators</div>
      )}
      <table className="table">
        <thead>
          <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          {investigators.map(i => {
            if (editInvestigator.id === i.id) {
              return (
                <tr key={i.id}>
                  <td>
                    <input
                      name="firstName"
                      className="form-control"
                      value={editInvestigator.firstName}
                      onChange={handleEditChange}
                    />
                  </td>
                  <td>
                    <input
                      name="lastName"
                      className="form-control"
                      value={editInvestigator.lastName}
                      onChange={handleEditChange}
                    />
                  </td>
                  <td>
                    <button
                      className="btn btn-secondary mr-2"
                      onClick={() => setEditInvestigator(INVESTIGATOR)}
                    >
                      Cancel
                    </button>
                    <button className="btn btn-primary" onClick={update}>
                      Save
                    </button>
                  </td>
                </tr>
              );
            } else {
              return (
                <tr key={i.id}>
                  <td>{i.firstName}</td>
                  <td>{i.lastName}</td>
                  <td>
                    <button
                      className="btn btn-danger mr-2"
                      onClick={() => remove(i.id)}
                    >
                      Delete
                    </button>
                    <button
                      className="btn btn-secondary"
                      onClick={() => setEditInvestigator(i)}
                    >
                      Edit
                    </button>
                  </td>
                </tr>
              );
            }
          })}
          <tr>
            <td>
              <input
                name="firstName"
                className="form-control"
                value={addInvestigator.firstName}
                onChange={handleAddChange}
              />
            </td>
            <td>
              <input
                name="lastName"
                className="form-control"
                value={addInvestigator.lastName}
                onChange={handleAddChange}
              />
            </td>
            <td>
              <button className="btn btn-primary" onClick={add}>
                Add Investigator
              </button>
            </td>
          </tr>
        </tbody>
      </table>
    </>
  );
}

export default Investigators;
